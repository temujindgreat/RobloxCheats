-- Define your module (replace 'NEVERLOSE' with your actual module name)
local NEVERLOSE = {}

-- Function to create a dropdown menu
function NEVERLOSE:AddDropdown(DropdownName, data, Default, callback)
    data = data or {}
    Default = Default or data[1]
    callback = callback or function() end

    -- Create dropdown components
    local Dropdown = Instance.new("Frame")
    local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    local UICorner = Instance.new("UICorner")
    local LabelText = Instance.new("TextLabel")
    local ToggleButton = Instance.new("TextButton")
    local DropdownItems = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")

    Dropdown.Name = "Dropdown"
    Dropdown.Parent = Section -- Replace 'Section' with your parent GUI element
    Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Dropdown.BackgroundTransparency = 1.000
    Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Dropdown.BorderSizePixel = 0
    Dropdown.Position = UDim2.new(0.05, 0, 0.601, 0) -- Adjust position as needed
    Dropdown.Size = UDim2.new(0.9, 0, 0, 30) -- Initial size, adjusts dynamically
    Dropdown.ZIndex = 5

    UIAspectRatioConstraint.Parent = Dropdown
    UIAspectRatioConstraint.AspectRatio = 7.000
    UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

    UICorner.CornerRadius = UDim.new(0, 3)
    UICorner.Parent = Dropdown

    LabelText.Name = "LabelText"
    LabelText.Parent = Dropdown
    LabelText.AnchorPoint = Vector2.new(0, 0.5)
    LabelText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    LabelText.BackgroundTransparency = 1.000
    LabelText.BorderColor3 = Color3.fromRGB(0, 0, 0)
    LabelText.BorderSizePixel = 0
    LabelText.Position = UDim2.new(0, 5, 0.5, 0)
    LabelText.Size = UDim2.new(0.8, -20, 0.9, 0)
    LabelText.ZIndex = 6
    LabelText.Font = Enum.Font.SourceSansSemibold
    LabelText.Text = DropdownName or "Dropdown"
    LabelText.TextColor3 = Color3.fromRGB(0, 0, 0)
    LabelText.TextScaled = true
    LabelText.TextSize = 18.000
    LabelText.TextWrapped = true
    LabelText.TextXAlignment = Enum.TextXAlignment.Left

    ToggleButton.Name = "ToggleButton"
    ToggleButton.Parent = Dropdown
    ToggleButton.AnchorPoint = Vector2.new(1, 0.5)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.BackgroundTransparency = 1.000
    ToggleButton.Position = UDim2.new(1, -5, 0.5, 0)
    ToggleButton.Size = UDim2.new(0, 20, 0, 20)
    ToggleButton.Font = Enum.Font.SourceSans
    ToggleButton.Text = "â–¼"
    ToggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    ToggleButton.TextScaled = true
    ToggleButton.TextSize = 18.000
    ToggleButton.TextWrapped = true

    DropdownItems.Name = "DropdownItems"
    DropdownItems.Parent = Dropdown
    DropdownItems.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DropdownItems.BackgroundTransparency = 1.000
    DropdownItems.BorderColor3 = Color3.fromRGB(0, 0, 0)
    DropdownItems.BorderSizePixel = 0
    DropdownItems.Position = UDim2.new(0, 0, 1, 0)
    DropdownItems.Size = UDim2.new(1, 0, 0, 0)
    DropdownItems.Visible = false
    DropdownItems.ZIndex = 6

    UIListLayout.Parent = DropdownItems
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)

    -- Create dropdown items dynamically
    for i, itemText in ipairs(data) do
        local ItemButton = Instance.new("TextButton")
        ItemButton.Name = "ItemButton"
        ItemButton.Parent = DropdownItems
        ItemButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ItemButton.BackgroundTransparency = 1.000
        ItemButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ItemButton.Size = UDim2.new(1, 0, 0, 25)
        ItemButton.Font = Enum.Font.SourceSans
        ItemButton.Text = itemText
        ItemButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        ItemButton.TextSize = 18.000
        ItemButton.TextWrapped = true
        ItemButton.MouseButton1Click:Connect(function()
            LabelText.Text = itemText
            callback(itemText)
            DropdownItems.Visible = false
        end)
    end

    -- Function to toggle dropdown visibility
    local function ToggleDropdown()
        DropdownItems.Visible = not DropdownItems.Visible
        if DropdownItems.Visible then
            Dropdown.Size = UDim2.new(0.9, 0, 0, math.min(#data * 30 + 30, 150)) -- Adjust height based on number of items
        else
            Dropdown.Size = UDim2.new(0.9, 0, 0, 30)
        end
    end

    ToggleButton.MouseButton1Click:Connect(ToggleDropdown)

    -- Function to set the default selection
    function NEVERLOSE:SetDefault(itemText)
        LabelText.Text = itemText
    end

    -- Return object with methods
    return {
        Toggle = ToggleDropdown,
        SetDefault = NEVERLOSE.SetDefault
    }
end

-- Example usage:
local dropdown = NEVERLOSE:AddDropdown("Select Item", {"Option 1", "Option 2", "Option 3"}, "Option 1", function(selected)
    print("Selected:", selected)
end)

-- Set default selection
dropdown:SetDefault("Option 2")
